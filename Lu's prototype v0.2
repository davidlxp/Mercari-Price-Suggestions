library(data.table) # Loading data
library(ggplot2) # Data visualization
#library(treemapify) # Treemap visualization
#library(gridExtra) # Create multiplot
library(dplyr) # data manipulation
library(tidyr) # data manipulation
library(tibble) # data wrangling
library(stringr) # String processing
#library(repr)
library(stringi) # String processing

train = fread('C:/Users/Yixiao Lu/Documents/189fpj/train.tsv', sep='\t')
#test = fread('C:/Users/Yixiao Lu/Documents/189fpj/test_stg2.tsv', sep='\t')

train = train %>% mutate(log_price = log(price+1)) # take log of the price
train = train %>% mutate(item_condition_id = factor(item_condition_id))
train = train %>% mutate(shipping = factor(shipping))
train = data.frame(train, str_split_fixed(train$category_name, '/', 4)) %>%
  mutate(cat1=X1, cat2=X2, cat3=X3, cat4=X4) %>% select(-X1, -X2, -X3, -X4)
train = train %>% mutate(has_brand=(brand_name!=''))#change to 01?

train = train %>% mutate(len_of_des = str_length(item_description))
train = train %>% mutate(num_token_des = str_count(item_description, '\\S+'))
train = train %>% mutate(num_token_name = str_count(name, '\\S+'))
train = train %>% #filter(cat1!='') %>% 
  mutate(cat3 = as.character(cat3)) %>% 
  mutate(cat_in_name = (str_detect(name, cat3)))
train = train %>% #filter(has_brand) %>% 
  mutate(brand_name = as.character(brand_name)) %>% 
  mutate(brand_in_name = (str_detect(name, brand_name)))

trial=train[,c(3,4,5,7,16,17,9)]
#(train$name,as.factor(train$item_condition_id),as.factor(train$category_name),as.factor(train$brand_name),train$shipping,train$num_token_des,train$num_token_name,train$log_price)
trial1=sparse.model.matrix(~item_condition_id+category_name+brand_name+shipping+num_token_des+num_token_name,trial[,1:6])
library(glmnet)
fit1=glmnet(trial1,trial[,7],alpha=1)
sp=sample(nrow(trial1),nrow(trial1)*0.1)
cv=cv.glmnet(trial1[sp,],trial[sp,7])
pred=predict(fit1,trial1[1:1000,],type="response", s=cv$lambda.min)
error=exp(pred)-exp(trial[1:1000,7])
#sparse matrix with all other train data!!!!!!!!!!!!!!!!
